@using AceAttitude.Data.Models;
@model List<StudentCourses>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admit Students</title>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Montserrat', sans-serif;
            background-color: #f0f0f0; /* Light gray background */
        }

        h2 {
            text-align: center; /* Center the title */
        }

        .container {
            display: flex;
            justify-content: center; /* Center the containers horizontally */
            align-items: center; /* Center the containers vertically */
            gap: 20px; /* Add gap between columns */
        }

        .column {
            width: 45%; /* Adjust width as needed */
            background-color: #fff; /* White background for containers */
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            overflow-y: auto; /* Enable vertical scrolling */
            padding: 20px;
            align-self: flex-start; /* Align to the start of the cross axis (top of the container) */
        }

        .user-list {
            list-style-type: none;
            padding: 0; /* Remove padding */
        }

        .user-item-teacher {
            padding: 10px 0;
            cursor: pointer; /* Change cursor to pointer on hover */
            border-bottom: 1px solid #28a745; /* Green border between entries */
        }

        .user-item-student {
            padding: 10px 0;
            cursor: pointer; /* Change cursor to pointer on hover */
            border-bottom: 1px solid #007bff; /* Blue border between entries */
        }

        .user-item-student.selected {
            background-color: #add8e6; /* Light blue background for selected student */
        }

        .user-item-teacher.selected {
            background-color: #c1e7c1; /* Light green background for selected teacher */
        }

        .user-item-student:hover, .user-item-teacher:hover, .user-item:hover {
            background-color: #f9f9f9; /* Light gray background on hover */
        }

        hr {
            border: 0;
            height: 10px;
            background-color: #000000; /* Light gray color for horizontal line */
        }

        .approve-btn {
            background-color: #007bff; /* Blue background for the button */
            color: #fff; /* White text color */
            border: none;
            border-radius: 4px;
            padding: 8px 16px;
            cursor: pointer;
            transition: background-color 0.3s;
            margin-top: 10px; /* Add some space between entries and button */
            display: block; /* Ensure button takes full width */
            margin-left: auto; /* Center the button horizontally */
            margin-right: auto; /* Center the button horizontally */
        }

            .approve-btn:hover {
                background-color: #0056b3; /* Darker blue background on hover */
            }

            .approve-btn:disabled {
                background-color: #6c757d; /* Grey background for disabled button */
                cursor: not-allowed; /* Change cursor to not-allowed */
            }

        .empty-message {
            text-align: center;
            font-size: 1.5em; /* Adjust the font size as needed */
            margin-top: 20px; /* Adjust the top margin as needed */
            color: #666; /* Adjust the color as needed */
        }
    </style>
</head>
<body>

    <div class="container">
        <div class="column">
            @if (Model.Count != 0)
            {
                <h2>@Model[0].Course.Title</h2>
            }
            <h2>All Students Admitted</h2>
            <hr>
            <ul class="user-list">

                @for (int i = 0; i < Model.Count; i++)
                {
                    var studentCourse = Model[i];
                    var student = studentCourse.Student.User;
                    var name = $"{student.FirstName} {student.LastName}";

                    if (i + 1 == Model.Count)
                    {
                        <li class="user-item-student border-bottom-0" data-studentcourseid="@studentCourse.Id" onclick="selectUser('@studentCourse.Id', 'student')">@name</li>
                    }
                    else
                    {
                        <li class="user-item-student" data-studentcourseid="@studentCourse.Id" onclick="selectUser('@studentCourse.Id', 'student')">@name</li>
                    }
                }

            </ul>
            @if (Model.Count == 0)
            {
                <p class="empty-message">There are no students currently awaiting approval.</p>
            }
            else
            {
                <hr> <!-- Horizontal line for visual separation -->

                <form method="post" asp-controller="Course" asp-action="AdmitStudentMVC" asp-route-id="@Model[0].Course.Id">
                    <input type="hidden" id="selectedStudentCourseId" name="studentcourseid" />
                    <button type="submit" class="approve-btn" id="admitStudentBtn" disabled>Admit</button>
                </form>
            }
        </div>
    </div>

    <script>
        // Disable admit button on page load
        document.addEventListener('DOMContentLoaded', function () {
            document.getElementById('admitStudentBtn').disabled = true;
        });

        function selectUser(studentCourseId, userType) {
            // Clear previous selections
            document.querySelectorAll('.user-item-student').forEach(item => {
                item.classList.remove('selected');
            });

            // Highlight the selected student and enable/disable admit button
            if (userType === 'student') {
                document.querySelector(`.user-item-student[data-studentcourseid="${studentCourseId}"]`).classList.add('selected');
                document.getElementById('selectedStudentCourseId').value = studentCourseId;
                document.getElementById('admitStudentBtn').disabled = false;
            }
        }
    </script>
</body>
</html>
