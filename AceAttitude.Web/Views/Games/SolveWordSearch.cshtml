@model char[,]

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Word Search Grid</title>
    <style>
        .grid {
            display: grid;
            grid-template-columns: repeat(@Model.GetLength(1), 50px); /* Set column width based on the number of columns */
            gap: 2px; /* Adjust gap between squares */
        }

        .square {
            width: 50px; /* Adjust square size as needed */
            height: 50px; /* Adjust square size as needed */
            background-color: #ffffff; /* Change background color as needed */
            border: 1px solid #000000; /* Change border color as needed */
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer; /* Add cursor pointer to indicate clickability */
        }
    </style>
</head>
<body>
    <div class="grid">
        @for (int i = 0; i < Model.GetLength(0); i++)
        {
            @for (int j = 0; j < Model.GetLength(1); j++)
            {
                char letter = Model[i, j];
                string letterClass = char.IsUpper(letter) ? "not-word" : "word"; /* Determine CSS class based on whether letter is part of a word */
                <div class="square @letterClass" data-letter="@letter">@letter</div>
            }
        }
    </div>

    <script>
        document.querySelectorAll('.square').forEach(square => {
            square.addEventListener('click', function () {
                if (this.classList.contains('not-word')) {
                    this.style.backgroundColor = 'red'; // Flash red for letters not part of a word
                    setTimeout(() => {
                        this.style.backgroundColor = '#ffffff'; // Reset background color after brief delay
                    }, 500); // Adjust duration as needed (500ms = half a second)
                } else {
                    this.style.backgroundColor = 'green'; // Highlight green for letters part of a word
                }

                // Check if all lowercase letters have been selected
                const selectedLetters = document.querySelectorAll('.word');
                const allLettersSelected = [...selectedLetters].every(letter => letter.style.backgroundColor === 'green');

                if (allLettersSelected) {
                    // Show pop-up message
                    alert("Congratulations, you have solved the word search!");
                }
            });
        });
    </script>
</body>
</html>

